{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copia de Untitled24.ipynb",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/PilarHS/Python-Classes/blob/main/Tarea%20%201%20Pilar%20V%C3%A1zquez\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**HOMEWORK #1**"
      ],
      "metadata": {
        "id": "vsE__OgyyLu9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**ACTIVITY 1**"
      ],
      "metadata": {
        "id": "htfrXZkzzJ0F"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Here are some assigned variables:\n"
      ],
      "metadata": {
        "id": "SVXSvonPyRXK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "name_1 = \"Jenny\"\n",
        "name_2 = \"Marco P.\"\n",
        "\n",
        "age_1 = 110\n",
        "age_2 = 42\n",
        "\n",
        "star_1 = \"Woopsie Doopsies\"\n",
        "star_2 = \"Omega-3\"\n",
        "star_3 = \"Justin Bieber\"\n",
        "star_4 = \"The Twinkle\"\n",
        "star_5 = \"Rosebert\"\n",
        "\n",
        "total_names_of_stars_mentioned = 5\n",
        "number_of_desired_stars = 325"
      ],
      "metadata": {
        "id": "lvB3RF__y8rN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Using ALL of the variables above, create one (or more) strings that, running the cell, print the following history:"
      ],
      "metadata": {
        "id": "GB4OWFOzzNe5"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\"Marco P. and Jenny are great friends. The best of them. They have been going back and forth for decades. Yes, decades. Marco P. is 110 years old and Jenny is 42. If you add up their ages, you get 152, which curiously is the number of stars that Marco P. and Jenny have named together. Their stars are their biggest fascination. They bought them at Best Buy in a celestial object bargain. There's 'Woopsie Doopsies', 'Omega-3', 'Justin Bieber', 'The Twinkle' , 'Rosaberta' and 147 other stars. Marco P. and Jenny plan to survive until the 22nd century. How many more stars will they have to buy and name together! Their goal is 325. Only 173 to go. Come on Marco P. and Jenny Marco P. and Jenny are the best of friends. There is no doubt about it.\"\n"
      ],
      "metadata": {
        "id": "gCeWnde6zTVu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "NrhM1nihXcf-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Remember to use ALL the variables we have assigned. Also, all numbers that appear in the text must be interpolated variables or arithmetic operations. No number can be a simple string.\n"
      ],
      "metadata": {
        "id": "yXgtX2IFzio4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(age_1+age_2)\n",
        "print(age_1-age_2)\n",
        "print(age_1*age_2)\n",
        "print(age_1+age_2)\n",
        "sum1=age_1+age_2\n",
        "print(age_1>age_2)\n",
        "print(age_1<age_2)\n",
        "print(age_1/age_2)\n",
        "st_1 = \"Woopsie Doopsies\"\n",
        "st_2 = \"Omega-3\"\n",
        "st_1 + st_2\n",
        "print(\"Suma de age_1 y age_2\")\n",
        "sum_1 = age_1 + age_2\n",
        "print(f'The sum of age_1 and age_2 is: {sum_1}')\n",
        "st_1 = \"Woopsie Doopsies\"\n",
        "st_2 = \"Omega-3\"\n",
        "st_3 = \"Justin Bieber\"\n",
        "st_4 = \"The Twinkle\"\n",
        "st_5 = \"Rosebert\"\n",
        "print(st_1+st_2+st_3+st_4+st_5)\n",
        "int_1 = 1\n",
        "int_2 = 1\n",
        "int_3 = 1\n",
        "int_4 = 1\n",
        "int_5 = 1\n",
        "int_6=147\n",
        "print(int_1+int_2+int_3+int_4+int_5+int_6)\n",
        "print(f'The sum of int_1+int_2+int_3+int_4+int_5+int_6 is: {sum_1}')\n",
        "print(sum_1+173)"
      ],
      "metadata": {
        "id": "yD-IqtSRznx2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "367a6dc0-4eac-4422-df5b-1fadaa09aa48"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "152\n",
            "68\n",
            "4620\n",
            "152\n",
            "True\n",
            "False\n",
            "2.619047619047619\n",
            "Suma de age_1 y age_2\n",
            "The sum of age_1 and age_2 is: 152\n",
            "Woopsie DoopsiesOmega-3Justin BieberThe TwinkleRosebert\n",
            "152\n",
            "The sum of int_1+int_2+int_3+int_4+int_5+int_6 is: 152\n",
            "325\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**ACTIVITY 2**"
      ],
      "metadata": {
        "id": "2wat_OrvzqdN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Here are some variables that have been assigned:\n"
      ],
      "metadata": {
        "id": "ZKyyd0cCzw3y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "var_1 = 3\n",
        "var_2 = 5\n",
        "var_3 = 9\n",
        "var_4 = 1\n",
        "var_5 = 9\n",
        "var_6 = -6\n",
        "var_7 = 5\n",
        "var_8 = 4"
      ],
      "metadata": {
        "id": "gU0c2bDVz_ll"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Below you have some comparisons that are incomplete, along with the expected result of said comparison. Add the appropriate comparison operators, in the middle of the variables, so that when running the cells the expected Results are obtained. For this challenge, the operators == and != are not allowed.\n"
      ],
      "metadata": {
        "id": "vIRgIrz-z9fI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "var_1>var_3 # Expected result: False"
      ],
      "metadata": {
        "id": "XLV63jsX0F3t",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9e2fd7b3-d2b8-40c2-e406-738bd9d8a198"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "var_1>var_4 # Expected result: True\n"
      ],
      "metadata": {
        "id": "rGU-oywV0K7v",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a4a830ef-3367-4be4-9491-33f89edb2b99"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "var_2>=var_7 # Expected result: True\n"
      ],
      "metadata": {
        "id": "XkxCSUIr0OP5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "32be1f44-f306-4d30-8009-8c74bce9161e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "var_8>var_6 # Expected result: True\n"
      ],
      "metadata": {
        "id": "EpSgJSo_3Drc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6eca1990-3f85-4b8a-ecf9-2cffb53b91a0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "var_3>var_5 # Expected result: False\n"
      ],
      "metadata": {
        "id": "V4UnvPEH3HaU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c21b2702-f9ca-4bed-a6f5-b23270f8903c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "var_1<var_3 # Expected result: True\n"
      ],
      "metadata": {
        "id": "hggl2aWH3Nns",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b5e0365a-bd7b-46b7-dd85-0804fe1ff4c4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**ACTIVITY 3**"
      ],
      "metadata": {
        "id": "14JLNRAT3SUt"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Here are some variables that have been assigned:\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "oL1mlL-q3UO7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "var_1 = 3\n",
        "var_2 = 5\n",
        "var_3 = 9\n",
        "var_4 = 1\n",
        "var_5 = 9\n",
        "var_6 = -6\n",
        "var_7 = 5\n",
        "var_8 = 4"
      ],
      "metadata": {
        "id": "CGoNq2gL4TiE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "We have some logic comparisions. Before you run the cell, try to guess which will be the expect result. In one cell, there will be a problem in the code, fix it!"
      ],
      "metadata": {
        "id": "BazshrOk4cKv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "not(var_1<var_4)"
      ],
      "metadata": {
        "id": "3uYg_79X4Zjr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a8d00411-230b-4daf-9d3c-4c29650a55aa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(var_3>var_5) and  (var_8 == var_6)"
      ],
      "metadata": {
        "id": "F-7kRaRQ4u31",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f19e835b-7c06-4af9-87c5-0cdd4e38471a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "not(var_7<var_4) or (var_8 == var_8)"
      ],
      "metadata": {
        "id": "W27TOdW45adC",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2dde1460-5a7b-471f-e346-338236cb4440"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "var_3 > var_7"
      ],
      "metadata": {
        "id": "GhcsdMki5ryO",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "899906e5-a3f4-4a7c-e3ad-f572ea2a05d5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "HXOyLfKz0iyP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        ""
      ],
      "metadata": {
        "id": "0Ya0wliD0jTJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "7G1LkogD0kcR"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}